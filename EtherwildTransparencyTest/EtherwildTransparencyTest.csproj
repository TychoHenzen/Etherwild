<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net6.0-windows</TargetFramework>
        <RollForward>Major</RollForward>
        <PublishReadyToRun>false</PublishReadyToRun>
        <TieredCompilation>false</TieredCompilation>
        <UseWindowsForms>true</UseWindowsForms>
        <LangVersion>latest</LangVersion>
        <SelfContained>false</SelfContained>
        <PublishSingleFile>false</PublishSingleFile>
    </PropertyGroup>
    <PropertyGroup>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <ApplicationIcon>Icon.ico</ApplicationIcon>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
      <DebugType>none</DebugType>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="Costura.Fody" Version="5.8.0-alpha0098">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Fody" Version="6.8.1">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="MonoGame.Framework.WindowsDX" Version="3.8.1.303"/>
        <PackageReference Include="MonoGame.Content.Builder.Task" Version="3.8.1.303"/>
    </ItemGroup>
    <Target Name="RestoreDotnetTools" BeforeTargets="Restore">
        <Message Text="Restoring dotnet tools" Importance="High"/>
        <Exec Command="dotnet tool restore"/>
    </Target>
    <Target Name="PostBuild" AfterTargets="PostBuildEvent">
        <Exec Command="del $(TargetDir)\*.xml" />
        <Exec Command="del $(TargetDir)\*.pdb" />
        <Exec Command="del $(TargetDir)\Microsoft.CodeAnalysis*.dll" />
        <Exec Command="rmdir /S /Q $(TargetDir)runtimes" />
    </Target>
    <Target Name="PublishWithWarp" AfterTargets="Publish">
        <Exec Command="del $(TargetDir)*.xml" />
        <Exec Command="del $(TargetDir)*.pdb" />
        <Exec Command="del $(TargetDir)Microsoft.CodeAnalysis*.dll" />
        <Exec Command="rmdir /S /Q $(TargetDir)runtimes" />
        <Exec Command="dotnet warp --verbose --output $(TargetDir)\..\Etherwild.exe" Condition="'$(WarpOnBuild)' == 'true'" />
    </Target>
</Project>